<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easyink.wecom.mapper.WeResignedTransferRecordMapper">

    <insert id="batchInsert">
        INSERT INTO we_resigned_customer_transfer_record
        (record_id, external_userid, status, takeover_time, remark)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.recordId},#{item.externalUserid},#{item.status},
            IFNULL(#{item.takeoverTime},'0000-00-00 00:00:00'),#{item.remark}
            )
        </foreach>
        ON DUPLICATE KEY UPDATE
        `status` = VALUES (`status`),remark = VALUES(remark)
    </insert>

    <select id="get" resultType="com.easyink.wecom.domain.entity.transfer.WeResignedTransferRecord">
        SELECT id,
               corp_id,
               handover_userid,
               takeover_userid,
               dimission_time,
               handover_username,
               takeover_username,
               handover_department_name,
               takeover_department_name,
               transfer_time
        FROM we_resigned_transfer_record
        WHERE corp_id = #{corpId}
          AND handover_userid = #{handoverUserid}
          AND takeover_userid = #{takeoverUserid}
          AND dimission_time = #{dimissionTime}
        LIMIT 1
    </select>
    <!--    已分配记录列表-->
    <select id="listOfRecord" resultType="com.easyink.wecom.domain.vo.transfer.TransferResignedUserVO">
        SELECT wrtr.id, wrtr.corp_id, wrtr.handover_userid as userId, wrtr.takeover_userid, wrtr.dimission_time,
        wrtr.handover_username as userName,
        wrtr.takeover_username, wrtr.handover_department_name as mainDepartmentName, wrtr.takeover_department_name,
        wrtr.transfer_time,wu.alias,wu.head_image_url,
        (SELECT COUNT(external_userid) FROM we_resigned_customer_transfer_record WHERE record_id = wrtr.id ) as
        allocateCustomerNum,
        (SELECT COUNT(chat_id) FROM we_resigned_group_transfer_record WHERE record_id = wrtr.id) as allocateGroupNum
        FROM we_resigned_transfer_record wrtr
        LEFT JOIN we_user wu
        ON wrtr.corp_id = wu.corp_id AND wrtr.handover_userid = wu.user_id and wrtr.dimission_time = wu.dimission_time
        <where>
            wu.corp_id = #{corpId}
            ${params.dataScope}
            <if test="userName != null and userName != ''">
                <bind name="likeUserName" value="'%' + userName + '%'"/>
                AND wrtr.handover_username LIKE #{likeUserName}
            </if>
            <if test="beginTime != null">
                AND wrtr.transfer_time >= #{beginTime}
            </if>
            <if test="endTime != null">
                AND wrtr.transfer_time &lt;= #{endTime}
            </if>
        </where>
        ORDER BY wrtr.transfer_time DESC
    </select>
</mapper>
